name: CI/CD Microservices Build & Docker Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # Add PostgreSQL service for testing
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: lugun
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      # Install PostgreSQL client to create databases
      - name: Install PostgreSQL Client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # === API Gateway ===
      - name: Build API Gateway
        run: |
          cd ApiGatewayApplication
          mvn clean install
          DOCKER_TAG="api-gateway:${GITHUB_SHA}"
          docker build -t $DOCKER_TAG .
          docker tag $DOCKER_TAG ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG

      # === Auth Service ===
      - name: Build Auth Service
        run: |
          psql "postgresql://postgres:lugun@localhost:5432/postgres" -c "CREATE DATABASE auth_db;"
          cd AuthServer
          mvn clean install -Dspring.datasource.url=jdbc:postgresql://localhost:5432/auth_db -Dspring.datasource.username=postgres -Dspring.datasource.password=lugun
          DOCKER_TAG="auth-service:${GITHUB_SHA}"
          docker build -t $DOCKER_TAG .
          docker tag $DOCKER_TAG ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG

      # === Order Sale Service ===
      - name: Build Order Sale Service
        run: |
          psql "postgresql://postgres:lugun@localhost:5432/postgres" -c "CREATE DATABASE OrderSale;"
          cd OrderSale
          mvn clean install -Dspring.datasource.url=jdbc:postgresql://localhost:5432/OrderSale -Dspring.datasource.username=postgres -Dspring.datasource.password=lugun
          DOCKER_TAG="order-sale-service:${GITHUB_SHA}"
          docker build -t $DOCKER_TAG .
          docker tag $DOCKER_TAG ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG

      # === Supplier Stock Service ===
      - name: Build Supplier Stock Service
        run: |
          psql "postgresql://postgres:lugun@localhost:5432/postgres" -c "CREATE DATABASE SupplierStock;"
          cd SupplierStock
          mvn clean install -Dspring.datasource.url=jdbc:postgresql://localhost:5432/SupplierStock -Dspring.datasource.username=postgres -Dspring.datasource.password=lugun
          DOCKER_TAG="supplier-stock-service:${GITHUB_SHA}"
          docker build -t $DOCKER_TAG .
          docker tag $DOCKER_TAG ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG

      # === Product Category Service ===
      - name: Build Product Category Service
        run: |
          psql "postgresql://postgres:lugun@localhost:5432/postgres" -c "CREATE DATABASE ProductCategory;"
          cd ProductCategory
          mvn clean install -Dspring.datasource.url=jdbc:postgresql://localhost:5432/ProductCategory -Dspring.datasource.username=postgres -Dspring.datasource.password=lugun
          DOCKER_TAG="product-category-service:${GITHUB_SHA}"
          docker build -t $DOCKER_TAG .
          docker tag $DOCKER_TAG ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG

      # === Eureka Server ===
      - name: Build Eureka Server
        run: |
          cd servicediscovery
          mvn clean install
          DOCKER_TAG="eureka-server:${GITHUB_SHA}"
          docker build -t $DOCKER_TAG .
          docker tag $DOCKER_TAG ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_TAG
